name: reusableProdPuppeteer

on: 
  workflow_call:
    inputs:
      site:
        description: 'Site name to crawl'
        required: true
        type: string

env:
  site: ${{inputs.site}}
  MONGODB_URL: ${{secrets.MONGODB_URL}}
  GH_TOKEN: ${{secrets.GH_TOKEN}}
  GOOGLE_SERVICE_ACCOUNT_CREDENTIALS: ${{secrets.GOOGLE_SERVICE_ACCOUNT_CREDENTIALS}}
  GOOGLE_SHEET_ID: ${{secrets.GOOGLE_SHEET_ID}}
  GOOGLE_DRIVE_FOLDER_ID: ${{secrets.GOOGLE_DRIVE_FOLDER_ID}}
  GET_LOCAL_SITE_CONF: 'TRUE'

jobs:
  crawler-job:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js with caching
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'

    - name: Download sheet data artifact
      uses: actions/download-artifact@v4
      with:
        name: sheet-data
        path: .
      continue-on-error: true

    - name: Setup cached sheet data
      run: |
        if [ -f sheet-data.json ]; then
          echo "✅ Found cached sheet data"
          cp sheet-data.json siteConfig.json
          echo "📊 Sheet data info:"
          echo "  Timestamp: $(cat siteConfig.json | jq -r '.timestamp // "Unknown"')"
          echo "  Rows: $(cat siteConfig.json | jq '.data | length' 2>/dev/null || echo 'Unknown')"
        else
          echo "ℹ️  No cached data found, will use API calls"
        fi

    - name: Cache Puppeteer browsers
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/puppeteer
          ~/.local/share/puppeteer
          node_modules/puppeteer/.local-chromium
        key: ${{ runner.os }}-puppeteer-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-puppeteer-

    - name: Install dependencies
      run: |
        npm ci --prefer-offline --no-audit

    - name: Run crawler
      run: |
        echo "🚀 Starting crawler for site: ${{ inputs.site }}"
        node prodCrawlerPuppeteer.js

    - name: Upload results
      run: |
        echo "📤 Uploading results..."
        node src/pushToGit.js